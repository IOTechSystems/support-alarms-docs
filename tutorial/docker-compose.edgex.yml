name: edgex

volumes:
  alarms-service-data:
    name: edgex_alarms-service-data
  db-data:
    name: edgex_db-data
  kuiper-data:
    name: edgex_kuiper-data
  kuiper-etc:
    name: edgex_kuiper-etc
  kuiper-log:
    name: edgex_kuiper-log
  kuiper-plugins:
    name: edgex_kuiper-plugins

networks:
  edgex-network:
    driver: "bridge"

services:

  alarms-service:
    image: ${ALARM_SERVICE_IMAGE}
    hostname: alarms-service
    container_name: alarms-service 
    ports:
      - 59893:59893
      - 4840:4840
    restart: always
    depends_on:
      - database 
    networks:
      - edgex-network
    volumes:
     - alarms-service-data:/data/
     - ${PWD}/deployment/:/deployment
    environment:
      - ALARM_CONFIGS_DIR=/deployment/alarms 
      - MESSAGEBUS_SOURCES_DIR=/deployment/sources
      - WRITABLE_LOGLEVEL=INFO
      - MESSAGEBUS_SUB_TOPICS="xrt/mqtt/input"
      #- DISABLE_API=1
      #- DISABLE_ALARMS_SERVER=1

  controller-0:
    image: iotechsys/pymodbus-sim:1.0.4
    container_name: controller-0 
    command: --profile profiles/Controller.json --script /sim/script.py --port 5020
    networks:
      - edgex-network
    ports:
      - "5020:5020"
    volumes:
      - ${PWD}/sim:/sim
      - ${PWD}/res/profiles:/profiles
    restart: always

  controller-1:
    image: iotechsys/pymodbus-sim:1.0.4
    container_name: controller-1 
    command: --profile profiles/Controller.json --script /sim/script.py --port 5021
    networks:
      - edgex-network 
    ports:
      - "5021:5021"
    volumes:
      - ${PWD}/sim:/sim
      - ${PWD}/res/profiles:/profiles
    restart: always

  controller-2:
    image: iotechsys/pymodbus-sim:1.0.4
    container_name: controller-2
    command: --profile profiles/Controller.json --script /sim/script.py --port 5022
    networks:
      - edgex-network
    ports:
      - "5022:5022"
    volumes:
      - ${PWD}/sim:/sim
      - ${PWD}/res/profiles:/profiles
    restart: always

  app-rules-engine:
    command:
      - --registry
      - -cp=keeper.http://edgex-core-keeper:59890
    container_name: edgex-app-rules-engine
    depends_on:
      core-common-config-bootstrapper:
        condition: service_started
        required: true
      core-keeper:
        condition: service_started
        required: true
      core-metadata:
        condition: service_started
        required: true
    environment:
      EDGEX_PROFILE: rules-engine
      EDGEX_SECURITY_SECRET_STORE: "false"
      SERVICE_HOST: edgex-app-rules-engine
    hostname: edgex-app-rules-engine
    image: nexus3.edgexfoundry.org:10004/app-service-configurable:latest
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 59701
        published: "59701"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
  core-command:
    command:
      - --registry
      - -cp=keeper.http://edgex-core-keeper:59890
    container_name: edgex-core-command
    depends_on:
      core-common-config-bootstrapper:
        condition: service_started
        required: true
      core-keeper:
        condition: service_started
        required: true
      core-metadata:
        condition: service_started
        required: true
      database:
        condition: service_started
        required: true
    environment:
      EDGEX_SECURITY_SECRET_STORE: "false"
      EXTERNALMQTT_URL: tcp://edgex-mqtt-broker:1883
      SERVICE_HOST: edgex-core-command
    hostname: edgex-core-command
    image: nexus3.edgexfoundry.org:10004/core-command:latest
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 59882
        published: "59882"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
  core-common-config-bootstrapper:
    command:
      - /core-common-config-bootstrapper
      - --registry
      - -cp=keeper.http://edgex-core-keeper:59890
    container_name: edgex-core-common-config-bootstrapper
    depends_on:
      core-keeper:
        condition: service_started
        required: true
    environment:
      ALL_SERVICES_DATABASE_HOST: edgex-postgres
      ALL_SERVICES_MESSAGEBUS_HOST: edgex-mqtt-broker
      ALL_SERVICES_REGISTRY_HOST: edgex-core-keeper
      APP_SERVICES_CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
      DEVICE_SERVICES_CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
      EDGEX_SECURITY_SECRET_STORE: "false"
    hostname: edgex-core-common-config-bootstrapper
    image: nexus3.edgexfoundry.org:10004/core-common-config-bootstrapper:latest
    networks:
      edgex-network: null
    read_only: true
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
  core-data:
    command:
      - --registry
      - -cp=keeper.http://edgex-core-keeper:59890
    container_name: edgex-core-data
    depends_on:
      core-common-config-bootstrapper:
        condition: service_started
        required: true
      core-keeper:
        condition: service_started
        required: true
      database:
        condition: service_started
        required: true
    environment:
      EDGEX_SECURITY_SECRET_STORE: "false"
      SERVICE_HOST: edgex-core-data
    hostname: edgex-core-data
    image: nexus3.edgexfoundry.org:10004/core-data:latest
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 59880
        published: "59880"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
  core-keeper:
    container_name: edgex-core-keeper
    depends_on:
      database:
        condition: service_started
        required: true
    environment:
      DATABASE_HOST: edgex-postgres
      EDGEX_SECURITY_SECRET_STORE: "false"
      MESSAGEBUS_AUTHMODE: none
      MESSAGEBUS_HOST: edgex-mqtt-broker
      MESSAGEBUS_PORT: "1883"
      MESSAGEBUS_PROTOCOL: tcp
      MESSAGEBUS_SECRETNAME: ""
      MESSAGEBUS_TYPE: mqtt
      SERVICE_HOST: edgex-core-keeper
    hostname: edgex-core-keeper
    image: nexus3.edgexfoundry.org:10004/core-keeper:latest
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 59890
        published: "59890"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
  core-metadata:
    command:
      - --registry
      - -cp=keeper.http://edgex-core-keeper:59890
    container_name: edgex-core-metadata
    depends_on:
      core-keeper:
        condition: service_started
        required: true
      database:
        condition: service_started
        required: true
    environment:
      EDGEX_SECURITY_SECRET_STORE: "false"
      SERVICE_HOST: edgex-core-metadata
    hostname: edgex-core-metadata
    image: nexus3.edgexfoundry.org:10004/core-metadata:latest
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 59881
        published: "59881"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
  database:
    container_name: edgex-postgres
    environment:
      POSTGRES_DB: edgex_db
      POSTGRES_PASSWORD: postgres
    hostname: edgex-postgres
    image: postgres:16.3-alpine3.20
    networks:
      edgex-network:
        aliases:
          - postgres 
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 5432
        published: "5432"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /run
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
      - type: volume
        source: db-data
        target: /var/lib/postgresql/data
        volume: {}
  device-modbus:
    command:
      - -cp=keeper.http://edgex-core-keeper:59890
      - --registry
    container_name: edgex-device-modbus
    depends_on:
      core-common-config-bootstrapper:
        condition: service_started
        required: true
      core-data:
        condition: service_started
        required: true
      core-keeper:
        condition: service_started
        required: true
      core-metadata:
        condition: service_started
        required: true
    environment:
      EDGEX_SECURITY_SECRET_STORE: "false"
      SERVICE_HOST: edgex-device-modbus
    hostname: edgex-device-modbus
    image: nexus3.edgexfoundry.org:10004/device-modbus:latest
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 59900
        published: "59900"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
  mqtt-broker:
    command:
      - /usr/sbin/mosquitto
      - -c
      - /mosquitto-no-auth.conf
    container_name: edgex-mqtt-broker
    hostname: edgex-mqtt-broker
    image: eclipse-mosquitto:2.0
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 1883
        published: "1883"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
  rules-engine:
    container_name: edgex-kuiper
    depends_on:
      database:
        condition: service_started
        required: true
      mqtt-broker:
        condition: service_started
        required: true
    environment:
      CONNECTION__EDGEX__MQTTMSGBUS__OPTIONAL__CLIENTID: kuiper-rules-engine
      CONNECTION__EDGEX__MQTTMSGBUS__OPTIONAL__KEEPALIVE: "500"
      CONNECTION__EDGEX__MQTTMSGBUS__PORT: "1883"
      CONNECTION__EDGEX__MQTTMSGBUS__PROTOCOL: tcp
      CONNECTION__EDGEX__MQTTMSGBUS__SERVER: edgex-mqtt-broker
      CONNECTION__EDGEX__MQTTMSGBUS__TYPE: mqtt
      EDGEX__DEFAULT__OPTIONAL__CLIENTID: kuiper-rules-engine
      EDGEX__DEFAULT__OPTIONAL__KEEPALIVE: "500"
      EDGEX__DEFAULT__PORT: "1883"
      EDGEX__DEFAULT__PROTOCOL: tcp
      EDGEX__DEFAULT__SERVER: edgex-mqtt-broker
      EDGEX__DEFAULT__TOPIC: edgex/rules-events
      EDGEX__DEFAULT__TYPE: mqtt
      KUIPER__BASIC__CONSOLELOG: "true"
      KUIPER__BASIC__ENABLEOPENZITI: "false"
      KUIPER__BASIC__RESTPORT: "59720"
    hostname: edgex-kuiper
    image: lfedge/ekuiper:v1.14.0-alpha.2
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 59720
        published: "59720"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: kuiper:kuiper
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
      - type: volume
        source: kuiper-data
        target: /kuiper/data
        volume: {}
      - type: volume
        source: kuiper-etc
        target: /kuiper/etc
        volume: {}
      - type: volume
        source: kuiper-log
        target: /kuiper/log
        volume: {}
      - type: volume
        source: kuiper-plugins
        target: /kuiper/plugins
        volume: {}
  support-scheduler:
    command:
      - --registry
      - -cp=keeper.http://edgex-core-keeper:59890
    container_name: edgex-support-scheduler
    depends_on:
      core-common-config-bootstrapper:
        condition: service_started
        required: true
      core-keeper:
        condition: service_started
        required: true
      database:
        condition: service_started
        required: true
    environment:
      EDGEX_SECURITY_SECRET_STORE: "false"
      SERVICE_HOST: edgex-support-scheduler
    hostname: edgex-support-scheduler
    image: nexus3.edgexfoundry.org:10004/support-scheduler:latest
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 59863
        published: "59863"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
  support-notifications:
    command:
      - --registry
      - -cp=keeper.http://edgex-core-keeper:59890
    container_name: edgex-support-notifications
    depends_on:
      core-common-config-bootstrapper:
        condition: service_started
        required: true
      core-keeper:
        condition: service_started
        required: true
      database:
        condition: service_started
        required: true
    environment:
      EDGEX_SECURITY_SECRET_STORE: "false"
      SERVICE_HOST: edgex-support-notifications
    hostname: edgex-support-notifications
    image: nexus3.edgexfoundry.org:10004/support-notifications:latest
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 59860
        published: "59860"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
  ui:
    container_name: edgex-ui-go
    environment:
      EDGEX_SECURITY_SECRET_STORE: "false"
      SERVICE_HOST: edgex-ui-go
    hostname: edgex-ui-go
    image: nexus3.edgexfoundry.org:10004/edgex-ui:latest
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        target: 4000
        published: "4000"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true

